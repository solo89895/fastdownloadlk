name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Debug step: Check repository structure
      - name: Debug - List repository contents
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Repository contents:"
          find . -type d -maxdepth 2 | sort

      # Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Build frontend
      - name: Build frontend
        run: |
          # Check if frontend directory exists
          if [ ! -d "frontend" ]; then
            echo "Frontend directory not found, creating structure..."
            mkdir -p frontend/src
            # Create basic package.json if it doesn't exist
            if [ ! -f "frontend/package.json" ]; then
              echo '{
                "name": "fastdownloadlk-frontend",
                "version": "1.0.0",
                "scripts": {
                  "build": "mkdir -p dist && cp -r ../public/* dist/ || echo \"No public directory found\""
                }
              }' > frontend/package.json
            fi
          fi
          
          cd frontend
          npm install
          npm run build
        env:
          VITE_API_URL: https://fastlk.netlify.app

      # Verify frontend build
      - name: Verify frontend build
        run: |
          echo "Checking frontend build output:"
          if [ -d "frontend/dist" ]; then
            echo "Frontend dist directory found:"
            ls -la frontend/dist
          else
            echo "WARNING: frontend/dist directory not found!"
            echo "Looking for alternative build outputs:"
            find . -name "dist" -type d
            # Create a minimal dist directory if needed
            mkdir -p frontend/dist
            echo "<html><body><h1>FastDownloadLK</h1><p>Site is under maintenance. Please check back later.</p></body></html>" > frontend/dist/index.html
          fi

      # Prepare for deployment (without Jekyll)
      - name: Prepare deployment
        run: |
          # Create a fresh deploy directory
          rm -rf deploy
          mkdir -p deploy
          
          # Try to copy frontend build files first
          if [ -d "frontend/dist" ] && [ "$(ls -A frontend/dist)" ]; then
            echo "Copying frontend/dist files to deploy directory..."
            cp -r frontend/dist/* deploy/
          # If frontend/dist is empty or doesn't exist, try public directory
          elif [ -d "public" ]; then
            echo "Using public directory as fallback..."
            cp -r public/* deploy/ || echo "Warning: No files in public directory"
          # Last resort: create a basic HTML file
          else
            echo "Creating basic index.html as fallback..."
            echo "<html><body><h1>FastDownloadLK</h1><p>Site is under maintenance. Please check back later.</p></body></html>" > deploy/index.html
          fi
          
          # Create .nojekyll file to disable Jekyll processing
          touch deploy/.nojekyll
          
          # Show the contents of the deployment directory
          echo "Contents of deployment directory:"
          ls -la deploy/

      # Deploy directly to GitHub Pages without using Jekyll
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deploy
          branch: gh-pages
          clean: true 