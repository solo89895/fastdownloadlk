# Simple workflow for deploying static content to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Debug - List directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          if [ -d "frontend" ]; then
            echo "Frontend directory exists"
            ls -la frontend
          else
            echo "No frontend directory found"
          fi

      - name: Build frontend
        run: |
          # Create a minimal frontend if it doesn't exist
          if [ ! -d "frontend" ]; then
            mkdir -p frontend/dist
          fi

          # If there's a frontend with package.json, build it
          if [ -f "frontend/package.json" ]; then
            cd frontend
            npm install --no-fund --no-audit --loglevel=error || echo "npm install failed, continuing anyway"
            npm run build || echo "Build failed, creating a minimal site"
            cd ..
          else
            echo "No package.json found, creating a minimal site"
          fi

          # Ensure we have a dist directory with content
          mkdir -p frontend/dist
          if [ ! -f "frontend/dist/index.html" ]; then
            echo "Creating a minimal index.html"
            echo '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>FastDownloadLK</title></head><body><h1>FastDownloadLK</h1><p>Video Download Tool</p></body></html>' > frontend/dist/index.html
          fi

          # Create .nojekyll to disable Jekyll
          touch frontend/dist/.nojekyll

        env:
          VITE_API_URL: "https://fastlk.netlify.app/.netlify/functions/server"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './frontend/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 