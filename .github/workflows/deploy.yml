name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Node.js for frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Build frontend
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_URL: https://fastlk.netlify.app/.netlify/functions/server

      # Setup Ruby for Jekyll
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      # Create necessary Jekyll files
      - name: Setup Jekyll files
        run: |
          mkdir -p docs/assets/css
          echo -e "---\n---\n\n@import \"{{ site.theme }}\";" > docs/assets/css/style.scss
          
          # Copy frontend build to docs
          cp -r frontend/dist/* docs/
          
          # Create .nojekyll file
          touch docs/.nojekyll

      # Build with Jekyll
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

# Debug step: Check repository structure
- name: Debug - List repository contents
  run: |
    echo "Current directory structure:"
    ls -la
    echo "Repository contents:"
    find . -type d -maxdepth 2 | sort 